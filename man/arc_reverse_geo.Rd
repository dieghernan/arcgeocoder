% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/arc_reverse_geo.R
\name{arc_reverse_geo}
\alias{arc_reverse_geo}
\title{Reverse Geocoding using the ArcGIS REST API}
\usage{
arc_reverse_geo(
  lat,
  long,
  address = "address",
  full_results = FALSE,
  return_coords = TRUE,
  verbose = FALSE,
  progressbar = TRUE,
  custom_query = list()
)
}
\arguments{
\item{lat}{latitude values in numeric format. Must be in the range
\verb{[-90, 90]}.}

\item{long}{longitude values in numeric format. Must be in the range
\verb{[-180, 180]}.}

\item{address}{address column name in the output data (default  \code{"address"}).}

\item{full_results}{returns all available data from the API service. If
\code{FALSE} (default) only latitude, longitude and address columns are
returned.}

\item{return_coords}{return input coordinates with results if \code{TRUE}.}

\item{verbose}{if \code{TRUE} then detailed logs are output to the console.}

\item{progressbar}{Logical. If \code{TRUE} displays a progress bar to indicate
the progress of the function.}

\item{custom_query}{API-specific parameters to be used, passed as a named
list (i.e. \code{list(featureTypes = "POI")}). See \strong{Details}.}
}
\value{
A \CRANpkg{tibble} with the results.
}
\description{
Generates an address from a latitude and longitude. Latitudes must be
between \verb{[-90, 90]} and longitudes between \verb{[-180, 180]}. This
function returns the \CRANpkg{tibble} associated with the query.
}
\details{
See \url{https://developers.arcgis.com/rest/geocode/api-reference/geocoding-reverse-geocode.htm}
for additional parameters to be passed to \code{custom_query}.
}
\examples{
\dontshow{if (arcgeocoder_check_access()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
\donttest{

arc_reverse_geo(lat = 40.75728, long = -73.98586)

# Several coordinates
arc_reverse_geo(lat = c(40.75728, 55.95335), long = c(-73.98586, -3.188375))

# With options: zoom to country level
sev <- arc_reverse_geo(
  lat = c(40.75728, 55.95335), long = c(-73.98586, -3.188375),
  custom_query = list(featureTypes = "StreetInt,POI", langCode = "FR"),
  verbose = TRUE, full_results = TRUE
)

dplyr::glimpse(sev)
}
\dontshow{\}) # examplesIf}
}
\seealso{
\code{\link[tidygeocoder:reverse_geo]{tidygeocoder::reverse_geo()}}
}
